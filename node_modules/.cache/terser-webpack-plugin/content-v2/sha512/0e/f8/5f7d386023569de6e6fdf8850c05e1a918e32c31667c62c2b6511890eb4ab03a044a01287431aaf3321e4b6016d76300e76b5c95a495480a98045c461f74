{"map":"{\"version\":3,\"sources\":[\"/Users/fangyuanzhang/Documents/GitHub/unitconverter/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/fangyuanzhang/Documents/GitHub/unitconverter/src/logo.svg\",\"/Users/fangyuanzhang/Documents/GitHub/unitconverter/src/InputNum/InputNum.js\",\"/Users/fangyuanzhang/Documents/GitHub/unitconverter/src/App.js\",\"/Users/fangyuanzhang/Documents/GitHub/unitconverter/src/serviceWorker.js\",\"/Users/fangyuanzhang/Documents/GitHub/unitconverter/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"inputNum\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"cm\",\"inch\",\"type\",\"onChange\",\"convert2Inch\",\"placeholder\",\"min\",\"convert2Cm\",\"kg\",\"pound\",\"convert2Pound\",\"convert2Kg\",\"App\",\"state\",\"convertCm2Inch\",\"event\",\"_this\",\"setState\",\"target\",\"value\",\"parseFloat\",\"convertInch2Cm\",\"convertKg2Pound\",\"convertPound2Kg\",\"InputNum_InputNum\",\"this\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yLCuBzBC,qBAnBE,SAACC,GACd,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,KAAA,KAAA,eACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMK,GAAV,WAAsBL,EAAMM,KAA5B,YACAL,EAAAC,EAAAC,cAAA,QAAA,CAAOI,KAAK,SAASC,SAAUR,EAAMS,aAAcC,YAAY,KAAKC,IAAI,MACxEV,EAAAC,EAAAC,cAAA,QAAA,CAAOI,KAAK,SAASC,SAAUR,EAAMY,WAAYF,YAAY,OAAOC,IAAI,OAE5EV,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMa,GAAV,WAAsBb,EAAMc,MAA5B,YACAb,EAAAC,EAAAC,cAAA,QAAA,CAAOI,KAAK,SAASC,SAAUR,EAAMe,cAAeL,YAAY,KAAKC,IAAI,MACzEV,EAAAC,EAAAC,cAAA,QAAA,CAAOI,KAAK,SAASC,SAAUR,EAAMgB,WAAYN,YAAY,QAAQC,IAAI,UCqD1EM,6MAhEbC,MAAM,CACJb,GAAI,EACJC,KAAM,EACNO,GAAI,EACJC,MAAO,KAQTK,eAAiB,SAACC,GAChBC,EAAKC,SAAS,CACZjB,GAAyB,GAAtBe,EAAMG,OAAOC,MAAaJ,EAAMG,OAAOC,MAAQ,IAClDlB,KAA4B,GAAtBc,EAAMG,OAAOC,MAA8C,QAAjCC,WAAWL,EAAMG,OAAOC,OAAoB,SAIhFE,eAAiB,SAACN,GAChBC,EAAKC,SAAS,CACZjB,GAAyB,GAAtBe,EAAMG,OAAOC,MAA8C,KAAjCC,WAAWL,EAAMG,OAAOC,OAAgB,IACrElB,KAA4B,GAAtBc,EAAMG,OAAOC,MAAaJ,EAAMG,OAAOC,MAAQ,SAIzDG,gBAAkB,SAACP,GACjBC,EAAKC,SAAS,CACZT,GAAyB,GAAtBO,EAAMG,OAAOC,MAAaJ,EAAMG,OAAOC,MAAQ,IAClDV,MAA6B,GAAtBM,EAAMG,OAAOC,MAA8C,QAAjCC,WAAWL,EAAMG,OAAOC,OAAmB,SAIhFI,gBAAkB,SAACR,GACjBC,EAAKC,SAAS,CACZT,GAAyB,GAAtBO,EAAMG,OAAOC,MAA8C,QAAjCC,WAAWL,EAAMG,OAAOC,OAAoB,IACzEV,MAA6B,GAAtBM,EAAMG,OAAOC,MAAaJ,EAAMG,OAAOC,MAAQ,+EAKxD,OACEvB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAA,KAAA,yDACAF,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC0B,EAAD,CACAxB,GAAIyB,KAAKZ,MAAMb,GACfC,KAAMwB,KAAKZ,MAAMZ,KACjBO,GAAIiB,KAAKZ,MAAML,GACfC,MAAOgB,KAAKZ,MAAMJ,MAClBL,aAAcqB,KAAKX,eACnBP,WAAYkB,KAAKJ,eACjBX,cAAee,KAAKH,gBACpBX,WAAYc,KAAKF,2BAvDTG,EAAAA,WCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\nimport './InputNum.css'\\n\\n// stateless component: no internal state management\\nconst inputNum = (props) => {\\n    return (\\n        <div className=\\\"InputNum\\\">\\n            <h3>cm and inch</h3>\\n            <div className=\\\"converter\\\"> \\n                <p>{props.cm} cm  =  {props.inch}  inches</p>\\n                <input type=\\\"number\\\" onChange={props.convert2Inch} placeholder=\\\"cm\\\" min=\\\"0\\\"/>\\n                <input type=\\\"number\\\" onChange={props.convert2Cm} placeholder=\\\"inch\\\" min=\\\"0\\\"/>\\n            </div>\\n            <h3>kg and pound</h3>\\n            <div className=\\\"converter\\\">\\n                <p>{props.kg} kg  =  {props.pound}  pounds</p>\\n                <input type=\\\"number\\\" onChange={props.convert2Pound} placeholder=\\\"kg\\\" min=\\\"0\\\"/>\\n                <input type=\\\"number\\\" onChange={props.convert2Kg} placeholder=\\\"pound\\\" min=\\\"0\\\"/>\\n            </div>\\n        </div>\\n    )\\n};\\n\\nexport default inputNum;\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport InputNum from './InputNum/InputNum.js';\\n\\nclass App extends Component {\\n  state={\\n    cm: 0,\\n    inch: 0,\\n    kg: 0,\\n    pound: 0,\\n  };\\n\\n  \\n      // inch: event.target.value,\\n      // inch: event.target.type === 'number'? parseFloat(event.target.value) * 0.393701 : null,\\n  \\n\\n  convertCm2Inch = (event) => {\\n    this.setState({\\n      cm:event.target.value != 0 ? event.target.value : '0',\\n      inch: event.target.value != 0 ? parseFloat(event.target.value) * 0.393701 : '0',\\n    })\\n  };\\n\\n  convertInch2Cm = (event) => {\\n    this.setState({\\n      cm:event.target.value != 0 ? parseFloat(event.target.value) * 2.54 : '0',\\n      inch: event.target.value != 0 ? event.target.value : '0', \\n    })\\n  };\\n\\n  convertKg2Pound = (event) => {\\n    this.setState({\\n      kg:event.target.value != 0 ? event.target.value : '0',\\n      pound: event.target.value != 0 ? parseFloat(event.target.value) * 2.20462 : '0',\\n    })\\n  };\\n\\n  convertPound2Kg = (event) => {\\n    this.setState({\\n      kg:event.target.value != 0 ? parseFloat(event.target.value) * 0.453592 : '0',\\n      pound: event.target.value != 0 ? event.target.value : '0', \\n    })\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <h1>Hi , I'm a Unit Converter~ (ฅ´ω`ฅ) </h1>\\n        <hr></hr>\\n        <div className=\\\"Body\\\">\\n          <InputNum \\n          cm={this.state.cm} \\n          inch={this.state.inch}\\n          kg={this.state.kg} \\n          pound={this.state.pound}\\n          convert2Inch={this.convertCm2Inch}\\n          convert2Cm={this.convertInch2Cm}\\n          convert2Pound={this.convertKg2Pound}\\n          convert2Kg={this.convertPound2Kg}>\\n          </InputNum>\\n\\n        </div>\\n            \\n      </div>\\n    );\\n  };\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(18)},,,,,,function(e,t,n){},function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),c=n.n(a),r=n(2),o=n.n(r),l=(n(14),n(3)),u=n(4),i=n(6),m=n(5),s=n(7),v=(n(15),n(16),n(17),function(e){return c.a.createElement(\"div\",{className:\"InputNum\"},c.a.createElement(\"h3\",null,\"cm and inch\"),c.a.createElement(\"div\",{className:\"converter\"},c.a.createElement(\"p\",null,e.cm,\" cm  =  \",e.inch,\"  inches\"),c.a.createElement(\"input\",{type:\"number\",onChange:e.convert2Inch,placeholder:\"cm\",min:\"0\"}),c.a.createElement(\"input\",{type:\"number\",onChange:e.convert2Cm,placeholder:\"inch\",min:\"0\"})),c.a.createElement(\"h3\",null,\"kg and pound\"),c.a.createElement(\"div\",{className:\"converter\"},c.a.createElement(\"p\",null,e.kg,\" kg  =  \",e.pound,\"  pounds\"),c.a.createElement(\"input\",{type:\"number\",onChange:e.convert2Pound,placeholder:\"kg\",min:\"0\"}),c.a.createElement(\"input\",{type:\"number\",onChange:e.convert2Kg,placeholder:\"pound\",min:\"0\"})))}),h=function(e){function t(){var e,n;Object(l.a)(this,t);for(var a=arguments.length,c=new Array(a),r=0;r<a;r++)c[r]=arguments[r];return(n=Object(i.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(c)))).state={cm:0,inch:0,kg:0,pound:0},n.convertCm2Inch=function(e){n.setState({cm:0!=e.target.value?e.target.value:\"0\",inch:0!=e.target.value?.393701*parseFloat(e.target.value):\"0\"})},n.convertInch2Cm=function(e){n.setState({cm:0!=e.target.value?2.54*parseFloat(e.target.value):\"0\",inch:0!=e.target.value?e.target.value:\"0\"})},n.convertKg2Pound=function(e){n.setState({kg:0!=e.target.value?e.target.value:\"0\",pound:0!=e.target.value?2.20462*parseFloat(e.target.value):\"0\"})},n.convertPound2Kg=function(e){n.setState({kg:0!=e.target.value?.453592*parseFloat(e.target.value):\"0\",pound:0!=e.target.value?e.target.value:\"0\"})},n}return Object(s.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"h1\",null,\"Hi , I'm a Unit Converter~ (\\u0e05\\xb4\\u03c9`\\u0e05) \"),c.a.createElement(\"hr\",null),c.a.createElement(\"div\",{className:\"Body\"},c.a.createElement(v,{cm:this.state.cm,inch:this.state.inch,kg:this.state.kg,pound:this.state.pound,convert2Inch:this.convertCm2Inch,convert2Cm:this.convertInch2Cm,convert2Pound:this.convertKg2Pound,convert2Kg:this.convertPound2Kg})))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(c.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[8,1,2]]]);","extractedComments":[]}